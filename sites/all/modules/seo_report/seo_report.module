<?php

/**
* Implements hook_menu().
*/
function seo_report_menu() {
  $items = array();

  $items['node/%node/seo-report'] = array(
    'access arguments' => array('access administration pages'),
    'page callback' => 'seo_report_export',
    'page arguments' => array(1),
    'title' => 'SEO report',
    'weight' => 5,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/create-seo-report'] = array(
    'title' => 'Create SEO report',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('seo_report_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function seo_report_form($form, &$form_state) {

  $form['from'] = array(
    '#type' => 'date_popup',
    '#title' => t('From'),
    '#date_format' => 'Y-m-d',
    '#default_value' => '2018-01-01 00:00:00',
  );

  $form['to'] = array(
    '#type' => 'date_popup',
    '#title' => t('To'),
    '#date_format' => 'Y-m-d',
    '#default_value' => 'YYYY-MM-DD 00:00:00',
  );

  $vocabulary = taxonomy_vocabulary_machine_name_load('published');
  $terms = entity_load('taxonomy_term', FALSE, array('vid' => $vocabulary->vid));

  $authors = [];
  foreach ($terms as $term) {
    $authors[$term->tid] = $term->name;
  }

  $form['author'] = array(
    '#type' => 'select', 
    '#title' => t('Author'), 
    '#options' => $authors,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Adatok kiolvasÃ¡sa',
  );

  
  if (isset($form_state['storage'])) {
    $form['output'] = array(
      '#markup' => $form_state['storage']['output'],
      '#prefix' => '<div class="output">',
      '#suffix' => '</div>',
    );
  }
  
  return $form;
}

function seo_report_form_submit($form, &$form_state) {
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
  ->entityCondition('bundle', 'a_article')
  ->propertyCondition('status', NODE_PUBLISHED)
  // See the comment about != NULL above.
  ->fieldCondition('field_published', 'tid', $form_state['values']['author'])
  ->propertyCondition('created', strtotime($form_state['values']['from']), '>=')
  //->fieldCondition('field_news_subtitle', 'value', '%' . db_like($year) . '%', 'like') // Equal to "contains"
  //->fieldOrderBy('field_photo', 'fid', 'DESC')
  ->range(0, 10);
  // Run the query as user 1.
  //->addMetaData('account', user_load(1));
  if (isset($form_state['values']['to'])) {
    $query->propertyCondition('created', strtotime($form_state['values']['to']), '<=');
  }

  $result = $query->execute();
  if (isset($result['node'])) {
    $news_items_nids = array_keys($result['node']);
    $news_items = entity_load('node', $news_items_nids);
  } 

  $wrong = 0;
  foreach ($news_items as $item) {
    $author_term = taxonomy_term_load($item->field_published[LANGUAGE_NONE][0]['tid']);
    $author = $author_term->name;
    
    $report = seo_report_export($item, 0);
    $sum = 0;
    $points = 0;
    foreach ($report[1] as $row) {
      $sum ++;
      if ($row[2] == 'yes') {
        $points++;
      } else {
        $wrong++;
      }
    }

    $fields[] = [$item->title, $author, date('Y-m-d', $item->created), $report[0], $sum . '/' . $points, l('article', 'node/' . $item->nid . '/seo-report', ['attributes' => array( 'target' => '_blank' )])];
  }
  $fields[] = ['','', $wrong];

  $header = ['title', 'author', 'date', 'main tag', 'points', 'link'];
  $form_state['storage']['output'] = theme('table', array('header' => $header, 'rows' => $fields));
  $form_state['rebuild'] = TRUE;

}

/**
* Page callback.
*/
function seo_report_export($node, $output = 1) {

  $nw = entity_metadata_wrapper('node', $node);

  foreach ($nw->field_tagsa->value() as $key => $value) {
  	$first_tag = $value->name;
  	break 1;
  }

  $title = '<h1>First tag: ' . $first_tag . '</h1>';
  $header = ['field name', 'value', 'is tag occur'];
  
  if ($nw->title->value()) {
    $fields[] = ['title'] + _seo_report_emphasize_tag($first_tag, $nw->title->value());
  } else {
  	$fields[] = ['title', '<empty>'];	
  }

  if ($nw->field_title2->value()) {
    $fields[] = ['title2'] + _seo_report_emphasize_tag($first_tag, $nw->field_title2->value->value());
  }

  if ($nw->field_subtitled->value()) {
    $fields[] = ['subtitle'] + _seo_report_emphasize_tag($first_tag, $nw->field_subtitled->value->value());
  }

  if ($nw->field_meta_description->value()) {
    $fields[] = ['meta desc'] + _seo_report_emphasize_tag($first_tag, $nw->field_meta_description->value->value());
  }

  if ($nw->field_source->value()) {
    $fields[] = ['source'] + _seo_report_emphasize_tag($first_tag, strip_tags($nw->field_source->value->value()));
  }

  if ($nw->field_image->value()) {
    $fields[] = ['main image alt text'] + _seo_report_emphasize_tag($first_tag, $nw->field_image->alt->value());
  } 

  $text = $nw->field_text->value->value();
  $pattern = '/img.*?alt="(.*?)"/mi';
  preg_match_all($pattern, $text, $matches);

  $c = 1;
  foreach ($matches[1] as $row) {
  	$fields[] = ['image ' . $c . ' alt text'] + _seo_report_emphasize_tag($first_tag, $row);
  	$c++;
  } 

  if ($output == 1) {
    return $title . theme('table', array('header' => $header, 'rows' => $fields));
  } else {
    return [$first_tag, $fields];
  }
}

function _seo_report_emphasize_tag($tag, $text) {
	$ttag = strtolower($tag);
	$ttext = strtolower($text);

	$found = strpos($ttext, $ttag);
	if ($found === FALSE) {
		return [0, $text, 'no'];
	} else {
		$start = substr($text, 0, $found);
		$end = substr($text, $found + strlen($tag));
		return [0, $start . '<strong>' . $tag . '</strong>' . $end, 'yes'];
	}
}
